version: 2.1

jobs:
  create_backend_infrastructure:
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Ensure backend infrastructure exist
            command: |
              aws cloudformation deploy \
                --template-file ./.circleci/files/backend.yml \
                --stack-name udacitycicdstack

  create_frontend_infrastructure:
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Ensure frontend infrastructure exist
            command: |
              aws cloudformation deploy \
                --template-file ./.circleci/files/frontend.yml \
                --stack-name udacitycicdfrontstack                

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Build backend"
          command: |
            cd backend
            npm install
            npm run build

  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Build frontend"
          command: |
            cd frontend
            npm install
            npm run build
            
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Test backend"
          command: |
            cd backend
            npm install
            npm run test
            
  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Test frontend"
          command: |
            cd frontend
            npm install
            npm run test
            
  audit-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Audit backend"
          command: |
            cd backend
            npm audit --audit-level=critical

  audit-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Audit frontend"
          command: |
            cd frontend
            npm audit --audit-level=critical

  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["2b:ae:fa:9e:27:5b:f2:60:50:fa:b6:b3:02:ce:d0:eb"]
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible # install the dependencies needed for your playbook            
      - run:
          name: Configure server
          command: |
            cd .circleci/ansible/
            cp ansible.cfg /etc/ansible/ansible.cfg
            ansible-playbook -i inventory.txt playbook.yml

workflows:
  default:
    jobs:
#      - create_backend_infrastructure
#      - create_frontend_infrastructure
      - configure_infrastructure
#      - build-backend
#      - build-frontend:
#          requires: 
#            - build-backend
#      - test-backend:
#          requires: 
#            - build-backend
#      - test-frontend:
#          requires:
#            - test-backend
#            - build-frontend
#      - audit-backend:
#          requires:
#            - test-backend
#            - test-frontend
#      - audit-frontend:
#          requires:
#            - test-backend
#            - test-frontend
